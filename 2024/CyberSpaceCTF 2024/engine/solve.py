from Crypto.Cipher import ARC4 , AES
import base64
def RC4_decrypt(enc):
    key_RC4 = b"This_Is_Muy_Sup3r_Str0ng_KEY_3232"
    p = ARC4.new(key_RC4)
    plain = p.encrypt(enc)
    return plain
def AES_decrypt(enc):
    iv = [0x12, 0x80, 0x22, 0x20, 0x00, 0x02, 0x00, 0x00, 0x10, 0x02, 
    0x00, 0xA0, 0x20, 0xB0, 0x30, 0x30]
    key = [0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 
    0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F]
    p = AES.new(bytearray(key),AES.MODE_CBC,bytearray(iv))
    plain = p.decrypt(enc)
    return plain

def rot13(text):
    result = []
    for char in text:
        if 'a' <= char <= 'z':
            result.append(chr(((ord(char) - ord('a') + 13) % 26) + ord('a')))
        elif 'A' <= char <= 'Z':
            result.append(chr(((ord(char) - ord('A') + 13) % 26) + ord('A')))
        else:
            result.append(char)
    return ''.join(result)
def base64_decode(enc):
    return base64.b64decode(enc)

enc= bytes.fromhex("456c09423ba01203c6333b6bbcdc6dfd009128cc266ff9fd831ea638e404c48d315ee57caf5f226f2d")
key=[0x06, 0x3F, 0x4A, 0x16, 0x7D, 0xDB, 0x6B, 0x33, 0xB3, 0x6C, 
  0x59, 0x19, 0x8C, 0xB7, 0x5E, 0xA2, 0x6D, 0xE8, 0x77, 0xFF, 
  0x48, 0x08, 0xC8, 0x93, 0xE6, 0x41, 0xCE, 0x0B, 0x96, 0x61, 
  0x9B, 0xF9, 0x59, 0x6D, 0xBA, 0x1B, 0x9E, 0x39, 0x56, 0x12, 
  0x27, 0x50, 0xD7, 0xDA, 0xD1, 0xCC, 0x46, 0x7C, 0x5C, 0x72, 
  0x79, 0x8B, 0x57, 0xEE, 0x7B, 0xF3, 0x2E, 0x80, 0xCA, 0x67, 
  0xDA, 0x3B, 0x9D, 0x30]
flag=[0]*len(enc)
for i in range(len(flag)):
    flag[i]=enc[i]^key[i]
print(bytearray(flag))
# bytearray(b'CSCTF{y0u_br0k3_my_3ng1ne_h3re_th3_g1ft}\n')