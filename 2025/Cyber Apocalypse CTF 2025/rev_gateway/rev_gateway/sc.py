# import gdb
# addr_index = 0x8049B1D
# list_bp = "08049DDB 0804A181 0x804a1c4"
# gdb.execute(f"b * {addr_index}")
# gdb.execute("r")
# index = []
# try:
#     for i in range(32):
#         gdb.execute("c")
#         eax = gdb.execute("info register eax", to_string=True).split("\n")[0].split()[1]
#         index.append((eax))
# except:
#     pass
# print(index)
from capstone import *
from capstone.x86 import *
shell = [  0xF3, 0x0F, 0x1E, 0xFA, 0x55, 0x48, 0x89, 0xE5, 0x48, 0x89, 
  0x7D, 0xD8, 0x48, 0x89, 0x75, 0xD0, 0x48, 0xC7, 0x45, 0xE8, 
  0xFF, 0xFF, 0xFF, 0xFF, 0x48, 0xC7, 0x45, 0xF0, 0x00, 0x00, 
  0x00, 0x00, 0xEB, 0x5D, 0x48, 0x8B, 0x55, 0xD8, 0x48, 0x8B, 
  0x45, 0xF0, 0x48, 0x01, 0xD0, 0x0F, 0xB6, 0x00, 0x0F, 0xB6, 
  0xC0, 0x48, 0x31, 0x45, 0xE8, 0x48, 0xC7, 0x45, 0xF8, 0x00, 
  0x00, 0x00, 0x00, 0xEB, 0x32, 0x48, 0x8B, 0x45, 0xE8, 0x83, 
  0xE0, 0x01, 0x48, 0x85, 0xC0, 0x74, 0x1D, 0x48, 0x8B, 0x45, 
  0xE8, 0x48, 0xD1, 0xE8, 0x48, 0x89, 0xC2, 0x48, 0xB8, 0x42, 
  0x0F, 0x87, 0xD7, 0x95, 0x57, 0x6C, 0xC9, 0x48, 0x31, 0xD0, 
  0x48, 0x89, 0x45, 0xE8, 0xEB, 0x04, 0x48, 0xD1, 0x6D, 0xE8, 
  0x48, 0x83, 0x45, 0xF8, 0x01, 0x48, 0x83, 0x7D, 0xF8, 0x07, 
  0x76, 0xC7, 0x48, 0x83, 0x45, 0xF0, 0x01, 0x48, 0x8B, 0x45, 
  0xF0, 0x48, 0x3B, 0x45, 0xD0, 0x72, 0x99, 0x48, 0x8B, 0x45, 
  0xE8, 0x48, 0xF7, 0xD0, 0x5D, 0xC3]
# shell = [  0xF3, 0x0F, 0x1E, 0xFA, 0x55, 0x48, 0x89, 0xE5, 0x89, 0xF8, 
#   0x88, 0x45, 0xEC, 0x48, 0xC7, 0x45, 0xF8, 0x00, 0x00, 0x00, 
#   0x00, 0x0F, 0xB6, 0x45, 0xEC, 0x48, 0x01, 0xC0, 0x25, 0xAA, 
#   0x00, 0x00, 0x00, 0x48, 0x89, 0x45, 0xF8, 0x0F, 0xB6, 0x45, 
#   0xEC, 0x48, 0xD1, 0xE8, 0x83, 0xE0, 0x55, 0x48, 0x09, 0x45, 
#   0xF8, 0x48, 0x8B, 0x45, 0xF8, 0x5D, 0xC3]
shell = bytes(shell)
md = Cs(CS_ARCH_X86, CS_MODE_64)
for i in md.disasm(shell, 0x1000):
    print("0x%x:\t%s\t%s" %(i.address, i.mnemonic, i.op_str))